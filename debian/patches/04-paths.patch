Index: sonic-pi-2.8.0/app/gui/qt/mainwindow.cpp
===================================================================
--- sonic-pi-2.8.0.orig/app/gui/qt/mainwindow.cpp	2015-11-26 11:27:50.904812183 +0100
+++ sonic-pi-2.8.0/app/gui/qt/mainwindow.cpp	2015-11-26 11:27:50.904812183 +0100
@@ -669,28 +669,44 @@
 void MainWindow::startServer(){
     serverProcess = new QProcess();
 
-    QString root = rootPath();
+    QString prg_path, prg_arg;
 
-  #if defined(Q_OS_WIN)
-    QString prg_path = root + "/app/server/native/windows/bin/ruby.exe";
-    QString prg_arg = root + "/app/server/bin/sonic-pi-server.rb";
-    sample_path = root + "/etc/samples";
-  #elif defined(Q_OS_MAC)
-    QString prg_path = root + "/server/native/osx/ruby/bin/ruby";
-    QString prg_arg = root + "/server/bin/sonic-pi-server.rb";
-    sample_path = root + "/etc/samples";
-  #else
-    //assuming Raspberry Pi
-    QString prg_path = root + "/app/server/native/raspberry/ruby/bin/ruby";
-    QFile file(prg_path);
-    if(!file.exists()) {
-      // use system ruby if bundled ruby doesn't exist
+    if (QCoreApplication::applicationDirPath().startsWith("/usr/bin")) {
+      
+      // Sonic Pi is installed on desktop Linux from a binary package
       prg_path = "ruby";
-    }
+      prg_arg = "/usr/lib/sonic-pi/server/bin/sonic-pi-server.rb";
+      sample_path = "/usr/share/sonic-pi/samples";
+      
+    } else {
+      
+      // Sonic Pi is running in the user's local dir or
+      // is installed on Win/Mac/RPi
+
+      QString root = rootPath();
+
+     #if defined(Q_OS_WIN)
+      prg_path = root + "/app/server/native/windows/bin/ruby.exe";
+      prg_arg = root + "/app/server/bin/sonic-pi-server.rb";
+      sample_path = root + "/etc/samples";
+     #elif defined(Q_OS_MAC)
+      prg_path = root + "/server/native/osx/ruby/bin/ruby";
+      prg_arg = root + "/server/bin/sonic-pi-server.rb";
+      sample_path = root + "/etc/samples";
+     #else
+      //assuming Raspberry Pi
+      prg_path = root + "/app/server/native/raspberry/ruby/bin/ruby";
+      QFile file(prg_path);
+      if(!file.exists()) {
+        // use system ruby if bundled ruby doesn't exist
+        prg_path = "ruby";
+      }
+
+      prg_arg = root + "/app/server/bin/sonic-pi-server.rb";
+      sample_path = root + "/etc/samples";
+     #endif
 
-    QString prg_arg = root + "/app/server/bin/sonic-pi-server.rb";
-    sample_path = root + "/etc/samples";
-  #endif
+    }
 
     prg_path = QDir::toNativeSeparators(prg_path);
     prg_arg = QDir::toNativeSeparators(prg_arg);
@@ -704,7 +720,6 @@
     }
 
 
-
     //    std::cout << "[GUI] - exec "<< prg_path.toStdString() << " " << prg_arg.toStdString() << std::endl;
 
     std::cout << "[GUI] - booting live coding server" << std::endl;
Index: sonic-pi-2.8.0/app/server/core.rb
===================================================================
--- sonic-pi-2.8.0.orig/app/server/core.rb	2015-11-26 11:27:50.904812183 +0100
+++ sonic-pi-2.8.0/app/server/core.rb	2015-11-26 11:27:50.904812183 +0100
@@ -49,7 +49,8 @@
   module Core
     module SPRand
       # Read in same random numbers as server for random stream sync
-      @@random_numbers = ::WaveFile::Reader.new(File.expand_path("../../../etc/buffers/rand-stream.wav", __FILE__), ::WaveFile::Format.new(:mono, :float, 44100)).read(441000).samples.freeze
+      random_numbers_path = File.dirname(__FILE__).start_with?("/usr/lib/sonic-pi") ? "/usr/share/sonic-pi" : "../../../etc"
+      @@random_numbers = ::WaveFile::Reader.new(File.expand_path("#{random_numbers_path}/buffers/rand-stream.wav", __FILE__), ::WaveFile::Format.new(:mono, :float, 44100)).read(441000).samples.freeze
 
       def self.to_a
         @@random_numbers
Index: sonic-pi-2.8.0/app/server/sonicpi/lib/sonicpi/util.rb
===================================================================
--- sonic-pi-2.8.0.orig/app/server/sonicpi/lib/sonicpi/util.rb	2015-11-26 11:27:50.904812183 +0100
+++ sonic-pi-2.8.0/app/server/sonicpi/lib/sonicpi/util.rb	2015-11-26 11:27:50.904812183 +0100
@@ -144,7 +144,9 @@
     end
 
     def snippets_path
-      File.absolute_path("#{etc_path}/snippets")
+      File.dirname(__FILE__).start_with?("/usr/lib/sonic-pi") ?
+        File.absolute_path("/usr/share/sonic-pi/snippets") :
+        File.absolute_path("#{etc_path}/snippets")
     end
 
     def doc_path
@@ -164,15 +166,21 @@
     end
 
     def synthdef_path
-      File.absolute_path("#{etc_path}/synthdefs/compiled")
+      File.dirname(__FILE__).start_with?("/usr/lib/sonic-pi") ?
+        File.absolute_path("/usr/share/sonic-pi/synthdefs/compiled") :
+        File.absolute_path("#{etc_path}/synthdefs/compiled")
     end
 
     def samples_path
-      File.absolute_path("#{etc_path}/samples")
+      File.dirname(__FILE__).start_with?("/usr/lib/sonic-pi") ?
+        File.absolute_path("/usr/share/sonic-pi/samples") :
+        File.absolute_path("#{etc_path}/samples")
     end
 
     def buffers_path
-      File.absolute_path("#{etc_path}/buffers")
+      File.dirname(__FILE__).start_with?("/usr/lib/sonic-pi") ?
+        File.absolute_path("/usr/share/sonic-pi/buffers") :
+        File.absolute_path("#{etc_path}/buffers")
     end
 
     def app_path
Index: sonic-pi-2.8.0/app/server/util.rb
===================================================================
--- sonic-pi-2.8.0.orig/app/server/util.rb	2015-11-26 11:27:50.904812183 +0100
+++ sonic-pi-2.8.0/app/server/util.rb	2015-11-26 11:53:18.477864804 +0100
@@ -16,11 +16,15 @@
 end
 
 def sp_scripts_path()
-  File.absolute_path("#{sp_sonic_pi_path}/app/scripts")
+  File.dirname(__FILE__).start_with?("/usr/lib/sonic-pi") ?
+    File.absolute_path("/usr/lib/sonic-pi/scripts") :
+    File.absolute_path("#{sp_sonic_pi_path}/app/scripts")
 end
 
 def sp_synthdefs_path()
-  File.absolute_path("#{sp_sonic_pi_path}/app/etc/synthdefs/compiled")
+  File.dirname(__FILE__).start_with?("/usr/lib/sonic-pi") ?
+    File.absolute_path("/usr/share/sonic-pi/synthdefs/compiled") :
+    File.absolute_path("#{sp_sonic_pi_path}/app/etc/synthdefs/compiled")
 end
 
 def spider_log(message)
